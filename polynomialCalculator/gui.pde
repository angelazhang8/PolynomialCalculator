/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw4(PApplet appc, GWinData data) { //_CODE_:window1:484111:
  appc.background(230);
} //_CODE_:window1:484111:

public void polynomial1Change(GTextField source, GEvent event) { //_CODE_:polynomial1:269090:
  p6 = new Polynomial(polynomial1.getText());
} //_CODE_:polynomial1:269090:

public void polynomial2Change(GTextField source, GEvent event) { //_CODE_:polynomial2:709368:
  p7 = new Polynomial(polynomial2.getText());
} //_CODE_:polynomial2:709368:

public void graphPolynomialButtonChange(GButton source, GEvent event) { //_CODE_:graphPolynomialButton:432256:
  println("got here");
  p6 = new Polynomial(polynomial1.getText());
  //window2.draw();

} //_CODE_:graphPolynomialButton:432256:

public void findRootsButtonClicked(GButton source, GEvent event) { //_CODE_:findRootsButton:463413:
 
} //_CODE_:findRootsButton:463413:

public void operationChange(GDropList source, GEvent event) { //_CODE_:operation:261089:
  opt = (operation.getSelectedIndex());
} //_CODE_:operation:261089:

public void derivativeSliderChange(GSlider source, GEvent event) { //_CODE_:derivativeSlider:346920:
  int numDerivative = int(p6.polyTerms.get(0).exponent * derivativeSlider.getValueF());
println(derivativeSlider.getValueF());

} //_CODE_:derivativeSlider:346920:

public void computeButtonClicked(GButton source, GEvent event) { //_CODE_:computeButton:411332:
  if (opt == 0)
    p6.getSum(p7).printPolynomial();
  else if (opt == 1)
    p6.getDifference(p7).printPolynomial();
  else if (opt == 2){
    p6.multiply(p7).printPolynomial();
  }
  else{
 
    p6.printPolynomial();
    p7.printPolynomial();
    ArrayList<Polynomial> quotientAndRemainder = p6.divide(p7);

    (quotientAndRemainder.get(0)).printPolynomial();
    (quotientAndRemainder.get(0)).printPolynomialtoGUIScreen();//different stuff here

    String tempString = "quotient: " + new String(yourAnswer) + "\n";
    (quotientAndRemainder.get(1)).printPolynomialtoGUIScreen();
    tempString += "remainder: " + yourAnswer;
    yourAnswer = tempString;
    
  }
  polynomialDisplay.setText(yourAnswer);
} //_CODE_:computeButton:411332:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "testing", 0, 0, 600, 400, JAVA2D);
  window1.noLoop();
  window1.addDrawHandler(this, "win_draw4");
  polynomial1 = new GTextField(window1, 28, 114, 160, 30, G4P.SCROLLBARS_NONE);
  polynomial1.setOpaque(true);
  polynomial1.addEventHandler(this, "polynomial1Change");
  polynomial2 = new GTextField(window1, 375, 117, 160, 30, G4P.SCROLLBARS_NONE);
  polynomial2.setOpaque(true);
  polynomial2.addEventHandler(this, "polynomial2Change");
  graphPolynomialButton = new GButton(window1, 372, 227, 94, 41);
  graphPolynomialButton.setText("Graph polynomial");
  graphPolynomialButton.addEventHandler(this, "graphPolynomialButtonChange");
  findRootsButton = new GButton(window1, 100, 235, 80, 30);
  findRootsButton.setText("FInd roots");
  findRootsButton.addEventHandler(this, "findRootsButtonClicked");
  operation = new GDropList(window1, 234, 120, 90, 100, 4);
  operation.setItems(loadStrings("list_261089"), 0);
  operation.addEventHandler(this, "operationChange");
  polynomialDisplay = new GLabel(window1, 226, 219, 118, 67);
  polynomialDisplay.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  polynomialDisplay.setText("Your answer");
  polynomialDisplay.setOpaque(false);
  derivativeSlider = new GSlider(window1, 262, 318, 131, 40, 10.0);
  derivativeSlider.setLimits(0.0, 0.0, 1.0);
  derivativeSlider.setNumberFormat(G4P.DECIMAL, 2);
  derivativeSlider.setOpaque(false);
  derivativeSlider.addEventHandler(this, "derivativeSliderChange");
  label2 = new GLabel(window1, 125, 313, 124, 53);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Find derivative");
  label2.setOpaque(false);
  polynomial1Label = new GLabel(window1, 52, 43, 115, 35);
  polynomial1Label.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  polynomial1Label.setText("Enter your first polynomial");
  polynomial1Label.setOpaque(false);
  polynomial2Label = new GLabel(window1, 383, 44, 141, 39);
  polynomial2Label.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  polynomial2Label.setText("Enter your second polynomial");
  polynomial2Label.setOpaque(false);
  computeButton = new GButton(window1, 230, 79, 80, 30);
  computeButton.setText("Compute");
  computeButton.addEventHandler(this, "computeButtonClicked");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GTextField polynomial1; 
GTextField polynomial2; 
GButton graphPolynomialButton; 
GButton findRootsButton; 
GDropList operation; 
GLabel polynomialDisplay; 
GSlider derivativeSlider; 
GLabel label2; 
GLabel polynomial1Label; 
GLabel polynomial2Label; 
GButton computeButton; 
